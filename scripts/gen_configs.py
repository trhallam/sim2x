import subprocess
import pathlib

from sim2x._cli._sim2imp import Sim2impConfig
from sim2x._cli._imp2seis import Sim2seisConfig
from sim2x._cli._sim2rg import Sim2rgConfig

import mkdocs_gen_files

print("Running script to generate automated config docs")


def get_subprocess_help(process, help="--help"):
    proc = subprocess.Popen(process + [help], stdout=subprocess.PIPE)
    proc.wait()
    return proc.stdout.read().decode()


# adjust output location to match simple mkdocs plugin
with mkdocs_gen_files.editor.FilesEditor.current() as FE:
    simple_build_dir = FE.config["plugins"]["simple"].build_docs_dir
    FE.directory = simple_build_dir
    with FE.open("cli/help_imp.md", "w") as mdf:
        print("Writing to:", mdf.name)
        print("To see the help menu", file=mdf)
        print("```shell\nsim2x imp --help\n```", file=mdf)
        print("Which has output:", file=mdf)
        print(
            "~~~shell\n{}\n~~~".format(get_subprocess_help(["sim2x", "imp"])), file=mdf
        )
        print("A default `CONFIG_FILE` can be generated by", file=mdf)
        print("```shell\nsim2x gc imp\n```", file=mdf)

    with FE.open("cli/imp_config.yml", "w") as mdf:
        print("Writing to:", mdf.name)
        yml = Sim2impConfig().yaml_desc(header=False, comments=False)
        mdf.write(yml)

    with FE.open("cli/help_rg.md", "w") as mdf:
        print("Writing to:", mdf.name)
        print("To see the help menu", file=mdf)
        print("```shell\nsim2x rg --help\n```", file=mdf)
        print("Which has output:", file=mdf)
        print(
            "~~~shell\n{}\n~~~".format(get_subprocess_help(["sim2x", "rg"])), file=mdf
        )
        print("A default `CONFIG_FILE` can be generated by", file=mdf)
        print("```shell\nsim2x gc rg\n```", file=mdf)

    with FE.open("cli/rg_config.yml", "w") as mdf:
        print("Writing to:", mdf.name)
        yml = Sim2rgConfig().yaml_desc(header=False, comments=False)
        mdf.write(yml)

    with FE.open("cli/help_seis.md", "w") as mdf:
        print("Writing to:", mdf.name)
        print("To see the help menu", file=mdf)
        print("```shell\nsim2x seis --help\n```", file=mdf)
        print("Which has output:", file=mdf)
        print(
            "~~~shell\n{}\n~~~".format(get_subprocess_help(["sim2x", "seis"])), file=mdf
        )
        print("A default `CONFIG_FILE` can be generated by", file=mdf)
        print("```shell\nsim2x gc seis\n```", file=mdf)

    with FE.open("cli/seis_config.yml", "w") as mdf:
        print("Writing to:", mdf.name)
        yml = Sim2seisConfig().yaml_desc(header=False, comments=False)
        mdf.write(yml)

# print(FE.edit_paths)
# print(FE.directory)
